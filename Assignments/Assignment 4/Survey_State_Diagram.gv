// Code generated by Umple 1.22.0.5146

digraph "Survey_State_Diagram" {
  compound = true;
  size="80,10"

  // Class: Model

    // Top Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [shape = point, fillcolor="black", width=0.2 ];
    start_Model_sm [ tooltip = "Class Model, SM sm, State start" ];
    
        
    // Format for normal states
    node [shape = rectangle, width=1,style=rounded];
    
      // State: IDLE

      Model_sm_IDLE [label = IDLE, tooltip = "Class Model, SM sm, State IDLE"];
      // End State: IDLE

      // State: BeingDesigned

      Model_sm_BeingDesigned [label = BeingDesigned, tooltip = "Class Model, SM sm, State BeingDesigned"];
      // End State: BeingDesigned

      // State: BeingTested

      Model_sm_BeingTested [label = BeingTested, tooltip = "Class Model, SM sm, State BeingTested"];
      // End State: BeingTested

      // State: SavingVersion

      Model_sm_SavingVersion [label = SavingVersion, tooltip = "Class Model, SM sm, State SavingVersion"];
      // End State: SavingVersion

      // State: GatheringData

     subgraph clusterModel_sm_GatheringData {
      label = "GatheringData";
      style = rounded;

      // Bottom Level StateMachine: GatheringData
      
      // Start states are shown as a black circle
      node [shape = point, fillcolor="black", width=0.2 ];
      start_Model_GatheringData [ tooltip = "Class Model, SM sm, State GatheringData.start" ];
      
            
      // Format for normal states
      node [shape = rectangle, width=1,style=rounded];
      
        // State: IDLE2

        Model_smGatheringData_IDLE2 [label = IDLE2, tooltip = "Class Model, SM sm, State GatheringData.IDLE2"];
        // End State: IDLE2

        // State: QuestionWaitingOnInput

        Model_smGatheringData_QuestionWaitingOnInput [label = QuestionWaitingOnInput, tooltip = "Class Model, SM sm, State GatheringData.QuestionWaitingOnInput"];
        // End State: QuestionWaitingOnInput

        // State: AnalyzeInput

        Model_smGatheringData_AnalyzeInput [label = AnalyzeInput, tooltip = "Class Model, SM sm, State GatheringData.AnalyzeInput"];
        // End State: AnalyzeInput

        // State: GetNextQuestion

        Model_smGatheringData_GetNextQuestion [label = GetNextQuestion, tooltip = "Class Model, SM sm, State GatheringData.GetNextQuestion"];
        // End State: GetNextQuestion

        // State: SaveResponses

        Model_smGatheringData_SaveResponses [label = SaveResponses, tooltip = "Class Model, SM sm, State GatheringData.SaveResponses"];
        // End State: SaveResponses

        // State: Finished

        Model_smGatheringData_Finished [label = Finished, tooltip = "Class Model, SM sm, State GatheringData.Finished"];
        // End State: Finished
      // End Bottom Level StateMachine: GatheringData
     }
      // End State: GatheringData

      // State: Closed

      Model_sm_Closed [label = Closed, tooltip = "Class Model, SM sm, State Closed"];
      // End State: Closed

      // State: Deleted

      Model_sm_Deleted [label = Deleted, tooltip = "Class Model, SM sm, State Deleted"];
      // End State: Deleted
    // End Top Level StateMachine: sm

  // All transitions
    start_Model_sm -> Model_sm_IDLE [  tooltip = "start to IDLE" ] ;
    Model_sm_IDLE -> Model_sm_BeingDesigned [  label = "CreateSurvey", tooltip = "From IDLE to BeingDesigned on CreateSurvey" ] ;
  
  Model_sm_BeingDesigned -> Model_sm_BeingTested [  label = "FinishedDesign", tooltip = "From BeingDesigned to BeingTested on FinishedDesign" ] ;
  
  Model_sm_SavingVersion -> Model_sm_BeingTested [  label = "FinishedSaving", tooltip = "From SavingVersion to BeingTested on FinishedSaving" ] ;
  
  Model_sm_BeingTested -> Model_sm_SavingVersion [  label = "MakeChange", tooltip = "From BeingTested to SavingVersion on MakeChange" ] ;
  
  Model_sm_BeingTested -> Model_smGatheringData_IDLE2 [  lhead=clusterModel_sm_GatheringData,  label = "FinishedTesting", tooltip = "From BeingTested to GatheringData on FinishedTesting" ] ;
  
  Model_sm_Closed -> Model_smGatheringData_IDLE2 [  lhead=clusterModel_sm_GatheringData,  label = "ReOpen", tooltip = "From Closed to GatheringData on ReOpen" ] ;
  
  start_Model_GatheringData -> Model_smGatheringData_IDLE2 [  tooltip = "start to GatheringData.IDLE2" ] ;
    Model_smGatheringData_Finished -> Model_smGatheringData_IDLE2 [  label = "GiveSessionIDtoUSER", tooltip = "From GatheringData.Finished to GatheringData.IDLE2 on GiveSessionIDtoUSER" ] ;
  
  Model_smGatheringData_Finished -> Model_smGatheringData_IDLE2 [  label = "CloseInstance", tooltip = "From GatheringData.Finished to GatheringData.IDLE2 on CloseInstance" ] ;
  
  Model_smGatheringData_GetNextQuestion -> Model_smGatheringData_QuestionWaitingOnInput [  label = "GiveQuestion", tooltip = "From GatheringData.GetNextQuestion to GatheringData.QuestionWaitingOnInput on GiveQuestion" ] ;
  
  Model_smGatheringData_QuestionWaitingOnInput -> Model_smGatheringData_AnalyzeInput [  label = "InputReceived", tooltip = "From GatheringData.QuestionWaitingOnInput to GatheringData.AnalyzeInput on InputReceived" ] ;
  
  Model_smGatheringData_IDLE2 -> Model_smGatheringData_GetNextQuestion [  label = "CreateNewSurveyInstance", tooltip = "From GatheringData.IDLE2 to GatheringData.GetNextQuestion on CreateNewSurveyInstance" ] ;
  
  Model_smGatheringData_IDLE2 -> Model_smGatheringData_GetNextQuestion [  label = "LoadSurveyInstance", tooltip = "From GatheringData.IDLE2 to GatheringData.GetNextQuestion on LoadSurveyInstance" ] ;
  
  Model_smGatheringData_AnalyzeInput -> Model_smGatheringData_GetNextQuestion [  label = "SkipQuestions", tooltip = "From GatheringData.AnalyzeInput to GatheringData.GetNextQuestion on SkipQuestions" ] ;
  
  Model_smGatheringData_AnalyzeInput -> Model_smGatheringData_GetNextQuestion [  label = "NextQuestion", tooltip = "From GatheringData.AnalyzeInput to GatheringData.GetNextQuestion on NextQuestion" ] ;
  
  Model_smGatheringData_GetNextQuestion -> Model_smGatheringData_SaveResponses [  label = "NoMoreQuestions", tooltip = "From GatheringData.GetNextQuestion to GatheringData.SaveResponses on NoMoreQuestions" ] ;
  
  Model_smGatheringData_SaveResponses -> Model_smGatheringData_Finished [  label = "FinishedSyncToServers", tooltip = "From GatheringData.SaveResponses to GatheringData.Finished on FinishedSyncToServers" ] ;
  
  Model_smGatheringData_IDLE2 -> Model_sm_Closed [  ltail=clusterModel_sm_GatheringData,  label = "CloseSurvey", tooltip = "From GatheringData to Closed on CloseSurvey" ] ;
  
  Model_sm_Closed -> Model_sm_Deleted [  label = "Delete", tooltip = "From Closed to Deleted on Delete" ] ;
  

}
